"use client";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import DashBoardLayout from "../../layout";
import {
  Text_14_600_FFFFFF,
  Text_26_600_FFFFFF,
} from "@/components/ui/text";
import { useLoader } from "src/context/appContext";
import { Flex, Tabs, Image } from "antd";
import { CustomBreadcrumb } from "@/components/ui/bud/card/DrawerBreadCrumbNavigation";
import BackButton from "@/components/ui/bud/drawer/BackButton";
import GeneralDeploymentInfo from "./components/GeneralDeploymentInfo";
import { useProjects } from "src/hooks/useProjects";
import WorkersTable from "../../projects/[slug]/workers";
import ModelEvalTable from "../../projects/[slug]/modelEvaluations";
import BenchmarkTable from "../../projects/[slug]/benchmarks";
import { PrimaryButton } from "@/components/ui/bud/form/Buttons";
import TagsList from "src/flows/components/TagsList";
import { useEndPoints } from "src/hooks/useEndPoint";
import { useDrawer } from "src/hooks/useDrawer";
import { PermissionEnum, useUser } from "src/stores/useUser";
import AdaptersTable from "./adapters";
import { useCluster } from "src/hooks/useCluster";


const ProjectDetailsPage = () => {
  const router = useRouter();
  const { projectId, clustersId, deploymentId } = router.query;
  const { hasPermission, loadingUser } = useUser();
  const { clusterDetails, getEndpointClusterDetails, pageSource, setPageSource } = useEndPoints();
  const { getClusterById } = useCluster();
  const { openDrawer } = useDrawer();

  const { selectedProject, getProject } = useProjects();

  const [activeTab, setActiveTab] = useState("1");
  const { showLoader, hideLoader } = useLoader();

  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    setIsMounted(true)
  }, []);

  const switchTab = (key: string) => {
    setActiveTab(key);
  };


  const load = async () => {
    showLoader();
    // if (!selectedProject || selectedProject.id !== projectId && projectId) {
    //   await getProject(projectId as string);
    // }
    if (projectId) {
      await getProject(projectId as string);
    }
    if (clustersId) {
      getClusterById(clustersId as string);
    }
    if (deploymentId && projectId) {
      await getEndpointClusterDetails(deploymentId as string, projectId as string);
    }
    hideLoader();
  }

  useEffect(() => {
    console.log('router', router)
    console.log('ClusterId', clustersId)
    console.log('projectId', projectId)
  }, [router.isReady]);

  useEffect(() => {
    if (projectId || clustersId && deploymentId) {
      load();
    }
  }, [projectId, deploymentId, clustersId]);

  useEffect(() => {
    console.log('clusterDetails', clusterDetails);
  }, [clusterDetails]);

  useEffect(() => {
    console.log('pageSource', pageSource);
  }, [pageSource]);

  useEffect(() => {
    setPageSource(pageSource)
  }, [pageSource]);


  const goBack = () => {
    router.back();
  };



  const HeaderContent = () => {
    return (
      <Flex align="center" justify="between">
        {isMounted && (
          <Flex align="center" justify="start">
            <BackButton onClick={goBack} />
            {/* <CustomBreadcrumb
            data={[`${pageSource}`, `${selectedProject ? selectedProject?.icon : clusterDetails?.cluster?.icon} ${selectedProject ? selectedProject?.name : clusterDetails?.cluster?.name}`, `${clusterDetails?.name}`]}
            urls={[`/${pageSource.toLocaleLowerCase()}`, `/${pageSource.toLocaleLowerCase()}/${projectId ? projectId : clusterDetails.cluster.id}`, `/${pageSource.toLocaleLowerCase()}/${clusterDetails?.id}`]}
          /> */}
            <CustomBreadcrumb
              data={[
                `${projectId ? 'Projects' : "Clusters"}`,
                `${selectedProject ? selectedProject?.icon : clusterDetails?.cluster?.icon} ${selectedProject ? selectedProject?.name : clusterDetails?.cluster?.name}`,
                `${clusterDetails?.name}`
              ]}
              urls={[
                `/${pageSource.toLocaleLowerCase()}`,
                `/${pageSource.toLocaleLowerCase()}/${projectId ? projectId : clusterDetails?.cluster?.id}`,
                ``
              ]}
            />
          </Flex>
        )}
      </Flex>
    );
  };
  const tags = [
    {
      name: clusterDetails?.model?.name,
      color: '#D1B854',
    },
    {
      name: clusterDetails?.cluster?.name,
      color: '#D1B854',
    }
  ]

  return (
    <DashBoardLayout >
      <div className="boardPageView">
        <div className="boardPageTop pt-0 !mb-[.4rem] px-[0]">
          <div className="px-[1.2rem] pt-[1.05rem] pb-[1.15rem] mb-[2.1rem] border-b-[1px] border-b-[#1F1F1F]">
            <HeaderContent />
          </div>
          <div className="flex items-center gap-4 justify-between flex-row px-[3.5rem]">
            <div className="w-full" >
              <Text_26_600_FFFFFF className="text-[#EEE] ">
                {clusterDetails?.name}
              </Text_26_600_FFFFFF>
              <div className="flex items-center gap-2 mt-[1rem]">
                <TagsList data={tags} />
              </div>
            </div>
            <div className="flex-row flex gap-2">
              {(activeTab == '1' && hasPermission(PermissionEnum.ModelManage)) && (
                <PrimaryButton
                  type="submit"
                  onClick={() => {
                    openDrawer('use-model');
                  }}
                  className="min-w-[7.7rem]"
                  text="Use this model"
                >
                </PrimaryButton>
              )}
            </div>
          </div>
        </div>
        <div className="projectDetailsDiv pb-3">
          <Tabs
            className="deploymentDetailsTable"
            defaultActiveKey="1"
            activeKey={activeTab}
            onChange={(key) => setActiveTab(key)}
            items={[
              {
                label: <div className="flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <path fillRule="evenodd" clipRule="evenodd" d="M7.03317 0.117188C5.32838 0.117188 3.7886 0.403123 2.6372 0.891827C2.06145 1.13615 1.58214 1.42805 1.22715 1.78552C0.872093 2.14299 0.636719 2.58655 0.636719 3.06854V11.168C0.636719 11.3187 0.660315 11.4652 0.70268 11.6064L0.703484 11.6089L0.704288 11.6105C0.938482 12.416 1.74861 12.9976 2.80776 13.4148C2.82154 13.4203 2.8357 13.4255 2.84959 13.4309C2.85629 13.4335 2.86299 13.4363 2.8697 13.439C2.93196 13.4629 2.99529 13.4862 3.05953 13.509C3.08522 13.518 3.11155 13.5266 3.13756 13.5355C3.19623 13.5556 3.25591 13.5751 3.31614 13.5942C3.33078 13.5989 3.34563 13.604 3.36038 13.6087C3.40913 13.6239 3.45788 13.6384 3.50759 13.6529C3.55966 13.6682 3.61216 13.6833 3.66525 13.698C3.69909 13.7073 3.73314 13.7163 3.76741 13.7253C3.80682 13.7357 3.84651 13.7459 3.88646 13.7559C3.93569 13.7682 3.98524 13.7804 4.03527 13.7921C4.06734 13.7996 4.09941 13.8073 4.1318 13.8146C4.18607 13.8267 4.24077 13.8385 4.2959 13.85C4.33563 13.8583 4.37559 13.8662 4.41575 13.8741C4.45597 13.8821 4.49657 13.8899 4.53722 13.8975C4.59101 13.9075 4.64517 13.917 4.69971 13.9264C4.73435 13.9323 4.76932 13.9376 4.80428 13.9433C4.85635 13.9517 4.90842 13.9604 4.96114 13.9683C5.00217 13.9743 5.04362 13.9803 5.08502 13.986C5.14219 13.9939 5.1993 14.0021 5.25716 14.0093C5.28805 14.0132 5.31942 14.0162 5.35047 14.0197C5.41584 14.0275 5.48137 14.0354 5.54754 14.0422C5.57285 14.0448 5.59854 14.047 5.62396 14.0495C5.69014 14.0559 5.75647 14.0624 5.82345 14.068C5.86447 14.0714 5.90603 14.0746 5.94732 14.0777C6.01092 14.0823 6.07453 14.0867 6.13877 14.0906C6.14649 14.091 6.15437 14.091 6.16209 14.0914C6.34448 14.1021 6.52922 14.11 6.71632 14.1139C6.82154 14.1161 6.9267 14.1172 7.03326 14.1172C7.13982 14.1172 7.24577 14.1162 7.351 14.1139C7.41707 14.1126 7.48255 14.1097 7.54807 14.1075C7.57671 14.1066 7.60562 14.1062 7.63415 14.1051C7.73303 14.1012 7.83107 14.0965 7.92855 14.0906H7.93268C7.99558 14.0868 8.05779 14.0823 8.1201 14.0777C8.16139 14.0746 8.20295 14.0714 8.24398 14.068C8.49919 14.0469 8.74877 14.0192 8.99207 13.9852C9.02784 13.9802 9.06355 13.9744 9.09905 13.9691C9.15558 13.9606 9.2114 13.9516 9.26717 13.9425C9.30069 13.9371 9.33447 13.9321 9.36772 13.9264C9.42226 13.9171 9.47642 13.9075 9.53021 13.8975C9.57091 13.8899 9.61145 13.8821 9.65168 13.8741C9.69184 13.8662 9.73179 13.8583 9.77153 13.85C9.82666 13.8385 9.88136 13.8268 9.93563 13.8146C9.96802 13.8073 10.0001 13.7997 10.0322 13.7921C10.0822 13.7804 10.1317 13.7682 10.181 13.7559C10.2209 13.7459 10.2606 13.7357 10.3 13.7253C10.3343 13.7163 10.3683 13.7073 10.4022 13.698C10.4553 13.6833 10.5078 13.6683 10.5598 13.6529C10.6865 13.6157 10.8096 13.5767 10.9299 13.5355C10.9559 13.5266 10.9822 13.5181 11.0079 13.509C11.0935 13.4787 11.1776 13.4472 11.2597 13.4148C12.3902 12.9696 13.2403 12.3372 13.4058 11.4448H13.4042C13.421 11.3543 13.4307 11.2621 13.4307 11.1681V3.0686C13.4307 2.99176 13.4235 2.91647 13.4122 2.84177C13.4104 2.80568 13.404 2.77002 13.3929 2.73564C13.3141 2.38294 13.115 2.05882 12.8435 1.78554C12.4884 1.42806 12.0058 1.13617 11.4302 0.891846C10.2787 0.403142 8.73783 0.117188 7.03317 0.117188ZM7.03317 0.940893C8.64407 0.940893 10.0953 1.21921 11.1075 1.64876C11.6136 1.86354 12.0079 2.11558 12.257 2.36629C12.4291 2.53955 12.5302 2.70344 12.5763 2.86099C12.4525 3.26792 11.9055 3.76631 10.9587 4.13918C9.95552 4.53424 8.56557 4.78672 7.0332 4.78672C5.50084 4.78672 4.11495 4.53424 3.11182 4.13918C2.16498 3.76631 1.61514 3.2679 1.4909 2.86099C1.53702 2.70343 1.63817 2.53955 1.81025 2.36629C2.0593 2.11558 2.45366 1.86354 2.95973 1.64876C3.97189 1.21921 5.42228 0.940893 7.03317 0.940893ZM1.46108 4.16172C1.82328 4.45409 2.28495 4.69916 2.80765 4.90499C3.93825 5.3502 5.41152 5.61045 7.03312 5.61045C8.65472 5.61045 10.1289 5.3502 11.2594 4.90499C11.7813 4.69949 12.2434 4.45507 12.606 4.16334V5.58395C12.6013 5.59661 12.5973 5.60948 12.5939 5.62257C12.5162 6.04134 11.9618 6.58049 10.9586 6.97557C9.95539 7.37063 8.56545 7.62311 7.03308 7.62311C5.50071 7.62311 4.11483 7.37063 3.11169 6.97557C2.1085 6.58051 1.55077 6.04134 1.47307 5.62257C1.46969 5.60948 1.46567 5.59661 1.461 5.58395L1.46108 4.16172ZM2.61942 5.36751C2.51077 5.36794 2.40663 5.41127 2.32978 5.48812C2.25298 5.56497 2.2096 5.66906 2.20917 5.77776C2.20874 5.887 2.25175 5.9919 2.32865 6.06944C2.4056 6.14698 2.51018 6.19079 2.61942 6.19122C2.72919 6.19165 2.83462 6.14821 2.91227 6.07056C2.98987 5.99296 3.03331 5.88753 3.03288 5.77776C3.03245 5.66852 2.98864 5.56396 2.91109 5.48699C2.8336 5.41004 2.72866 5.36708 2.61942 5.36751ZM1.46108 6.99804C1.82328 7.29036 2.28495 7.53623 2.80765 7.7421C3.93825 8.18732 5.41152 8.44676 7.03312 8.44676C8.65472 8.44676 10.1289 8.18732 11.2594 7.7421C11.7813 7.5366 12.2434 7.29137 12.606 6.99964V8.37114C12.5936 8.39951 12.5844 8.42916 12.5786 8.45962C12.5009 8.87845 11.9433 9.41676 10.94 9.81182C9.93682 10.2069 8.55085 10.4594 7.01862 10.4594C5.52648 10.4594 4.17176 10.22 3.17521 9.84239C2.17866 9.46475 1.58917 8.93938 1.47316 8.5264C1.46951 8.51632 1.46549 8.5064 1.4611 8.49664L1.46108 6.99804ZM2.61942 8.16924C2.51077 8.16967 2.40663 8.213 2.32978 8.28984C2.25298 8.36669 2.2096 8.47078 2.20917 8.57948C2.20874 8.68872 2.25175 8.79362 2.32865 8.87116C2.4056 8.9487 2.51018 8.99252 2.61942 8.99295C2.72919 8.99338 2.83462 8.94994 2.91227 8.87228C2.98987 8.79469 3.03331 8.68926 3.03288 8.57948C3.03245 8.47025 2.98864 8.36568 2.91109 8.28872C2.8336 8.21176 2.72866 8.16881 2.61942 8.16924ZM12.606 9.82228V11.168C12.606 11.2104 12.6023 11.253 12.5948 11.2959C12.5243 11.6755 12.0616 12.1507 11.2289 12.5307C11.1887 12.5489 11.1491 12.5669 11.1074 12.5846C11.1006 12.5875 11.0934 12.5897 11.0865 12.5927C11.0297 12.6165 10.9723 12.6406 10.9128 12.6635C10.8869 12.6734 10.8603 12.6827 10.8339 12.6924C10.8054 12.703 10.777 12.7142 10.7479 12.7246C10.7099 12.7382 10.6709 12.7509 10.632 12.764C10.5861 12.7796 10.5408 12.7949 10.4937 12.8099C10.4748 12.8158 10.4556 12.8209 10.4366 12.8268C10.3979 12.8388 10.3594 12.8514 10.3199 12.863C10.2822 12.874 10.2434 12.8845 10.2049 12.8951C10.1632 12.9067 10.1211 12.9186 10.0786 12.9297C10.0404 12.9397 10.0017 12.949 9.96276 12.9587C9.93499 12.9655 9.90721 12.9728 9.87911 12.9796C9.82955 12.9914 9.77925 13.0029 9.72868 13.0142C9.69147 13.0224 9.65377 13.0303 9.61607 13.0383C9.57494 13.047 9.53391 13.0557 9.49219 13.064C9.4517 13.0721 9.41095 13.0797 9.36992 13.0874C9.3289 13.095 9.28761 13.1026 9.24605 13.1099C9.20985 13.1163 9.17322 13.1223 9.13665 13.1284C8.99244 13.1522 8.84582 13.1737 8.69584 13.1928C8.67557 13.1954 8.65508 13.1976 8.63471 13.2C8.57373 13.2075 8.51233 13.2152 8.4505 13.2218C8.42015 13.225 8.38936 13.2275 8.3588 13.2306C8.20114 13.2463 8.04116 13.2599 7.87858 13.27C7.87139 13.2705 7.86404 13.2704 7.85686 13.2708C7.68005 13.2816 7.50132 13.2895 7.31951 13.2934C7.22486 13.2954 7.12898 13.2966 7.03315 13.2966C6.93759 13.2966 6.84278 13.2953 6.7484 13.2934C6.55926 13.2894 6.37221 13.2815 6.18854 13.27H6.18521C5.91166 13.2529 5.64525 13.227 5.38644 13.1944H5.38311C4.51501 13.0847 3.73831 12.8926 3.11161 12.6457C2.10836 12.2506 1.55069 11.7148 1.47299 11.2959C1.46526 11.253 1.46092 11.2104 1.46092 11.168V9.84639C1.84107 10.1499 2.32854 10.4012 2.88305 10.6114C4.00121 11.0351 5.43942 11.2839 7.01846 11.2839C8.64006 11.2839 10.1134 11.0236 11.2439 10.5784C11.7739 10.3697 12.2416 10.1201 12.606 9.82228ZM2.61942 11.1166C2.51077 11.117 2.40663 11.1603 2.32978 11.2372C2.25298 11.314 2.2096 11.4181 2.20917 11.5268C2.20874 11.636 2.25175 11.7409 2.32865 11.8185C2.4056 11.896 2.51018 11.9398 2.61942 11.9403C2.72919 11.9407 2.83462 11.8973 2.91227 11.8196C2.98987 11.742 3.03331 11.6366 3.03288 11.5268C3.03245 11.4176 2.98864 11.313 2.91109 11.236C2.8336 11.1591 2.72866 11.1161 2.61942 11.1166Z" fill="#EEEEEE" />
                  </svg>
                  <Text_14_600_FFFFFF
                    className="hover:text-[#EEEEEE]"
                    style={{ color: activeTab === "1" ? '#EEEEEE' : '#B3B3B3' }}
                  >General</Text_14_600_FFFFFF>
                </div>,
                key: '1',
                children: <GeneralDeploymentInfo switchTab={switchTab} />
              },
              {
                label: <div className="flex items-center gap-2">
                  <Image
                    preview={false}
                    src={'/images/icons/adapter.png'}
                    alt="info"
                    width={16}
                    height={16}
                  />
                  <Text_14_600_FFFFFF
                    className="hover:text-[#EEEEEE]"
                    style={{ color: activeTab === "2" ? '#EEEEEE' : '#B3B3B3' }}
                  >Adapters</Text_14_600_FFFFFF>
                </div>,
                key: '2',
                children: <AdaptersTable />,
              },
              {
                label: <div className="flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <g clipPath="url(#clip0_1517_3714)">
                      <path d="M1.69739 7.89056L1.69739 7.89056C1.89722 8.09037 2.22137 8.09039 2.4212 7.89059C2.42121 7.89058 2.42123 7.89057 2.42124 7.89056L2.78318 7.52898V13.7053C2.78318 13.8697 2.84578 14.0004 2.94532 14.0889C3.04304 14.1758 3.1705 14.2171 3.29471 14.2171C3.41891 14.2171 3.54638 14.1758 3.64409 14.0889C3.74364 14.0004 3.80623 13.8697 3.80623 13.7053V11.3346H8.64669C10.0668 11.3346 11.218 10.184 11.218 8.76432V7.52898L11.5799 7.89056C11.5799 7.89057 11.5799 7.89058 11.58 7.89059C11.7798 8.09038 12.1039 8.09038 12.3038 7.89056C12.5036 7.69073 12.5036 7.3671 12.3038 7.16727L11.0684 5.93188L10.9977 6.00259L11.0684 5.93188C10.8685 5.73206 10.5444 5.73205 10.3445 5.93188L9.10914 7.16727C8.90932 7.3671 8.90932 7.69073 9.10914 7.89056L9.17985 7.81985L9.10915 7.89056C9.30897 8.09037 9.63312 8.09039 9.83296 7.89059C9.83297 7.89058 9.83298 7.89057 9.83299 7.89056L10.1949 7.52898V8.76432C10.1949 9.61856 9.50207 10.3116 8.64672 10.3116H3.80626L3.80622 7.52899L4.16817 7.89056C4.16818 7.89057 4.16819 7.89058 4.1682 7.89059C4.36804 8.09038 4.6922 8.09038 4.89201 7.89056C5.09184 7.69073 5.09184 7.3671 4.89201 7.16727L3.65663 5.93188L3.65662 5.93188C3.45678 5.73206 3.13261 5.73205 2.93278 5.93188L1.69739 7.16727C1.49756 7.3671 1.49756 7.69073 1.69739 7.89056ZM2.05906 0.0171875C1.32242 0.0171875 0.724219 0.614847 0.724219 1.35258V3.8233C0.724219 4.56048 1.32188 5.15814 2.05906 5.15814H4.53034C5.26695 5.15814 5.86518 4.56051 5.86518 3.8233V1.35258C5.86518 0.615451 5.26758 0.0171875 4.53034 0.0171875H2.05906ZM1.74781 3.8233V1.35258C1.74781 1.18022 1.88742 1.04078 2.05906 1.04078H4.53034C4.70198 1.04078 4.84159 1.18022 4.84159 1.35258V3.8233C4.84159 3.99502 4.70207 4.13455 4.53034 4.13455H2.05906C1.88734 4.13455 1.74781 3.99502 1.74781 3.8233ZM9.47091 0.0171875C8.73428 0.0171875 8.13607 0.614847 8.13607 1.35258V3.8233C8.13607 4.56048 8.73373 5.15814 9.47091 5.15814H11.9422C12.6788 5.15814 13.277 4.56051 13.277 3.8233V1.35258C13.277 0.615451 12.6794 0.0171875 11.9422 0.0171875H9.47091ZM9.15966 3.8233V1.35258C9.15966 1.18022 9.29928 1.04078 9.47091 1.04078H11.9422C12.1138 1.04078 12.2534 1.18022 12.2534 1.35258V3.8233C12.2534 3.99502 12.1139 4.13455 11.9422 4.13455H9.47091C9.29919 4.13455 9.15966 3.99502 9.15966 3.8233Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    </g>
                    <defs>
                      <clipPath id="clip0_1517_3714">
                        <rect width="14" height="14" fill="white" transform="translate(0 0.117188)" />
                      </clipPath>
                    </defs>
                  </svg>
                  <Text_14_600_FFFFFF
                    className="hover:text-[#EEEEEE]"
                    style={{ color: activeTab === "2" ? '#EEEEEE' : '#B3B3B3' }}
                  >Workers</Text_14_600_FFFFFF>
                </div>,
                key: '3',
                children: <WorkersTable />,
              },
              {
                label: <div className="flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <path d="M12.6875 12.3672C12.6842 12.6073 12.4901 12.8014 12.25 12.8047H2.33352C1.77079 12.8014 1.31579 12.3464 1.3125 11.7837V1.86719C1.3125 1.62546 1.50828 1.42969 1.75 1.42969C1.99172 1.42969 2.1875 1.62546 2.1875 1.86719V7.40867L3.08602 6.73765V6.73819C3.07672 6.67038 3.07672 6.60148 3.08602 6.53367C3.08602 5.96985 3.54266 5.5132 4.10649 5.5132C4.67032 5.5132 5.12751 5.96983 5.12751 6.53367C5.12751 6.61843 5.11603 6.7032 5.09251 6.78469L7.18103 8.53469C7.31447 8.47344 7.45994 8.44172 7.60651 8.44117C7.69565 8.44281 7.78424 8.45649 7.86901 8.48219L10.15 5.78117C10.0942 5.65047 10.0647 5.50937 10.0625 5.36719C10.0625 4.9543 10.3114 4.58187 10.6925 4.42383C11.0743 4.26633 11.5134 4.35328 11.8054 4.64531C12.0969 4.93733 12.1844 5.37648 12.0264 5.75765C11.8683 6.13937 11.4964 6.3882 11.0835 6.3882C10.9944 6.38655 10.9058 6.37288 10.821 6.34718L8.48751 9.03616C8.5433 9.16741 8.57283 9.30796 8.57501 9.45069C8.57501 10.0145 8.11783 10.4712 7.55399 10.4712C6.99017 10.4712 6.53352 10.0145 6.53352 9.45069C6.53297 9.36592 6.545 9.28116 6.56852 9.19967L4.48 7.44967C4.34656 7.51092 4.20109 7.54263 4.05398 7.54318C3.88882 7.54099 3.72695 7.49943 3.58148 7.42068L2.1875 8.50568V11.7836C2.1875 11.8225 2.20281 11.8597 2.23016 11.887C2.2575 11.9143 2.29469 11.9297 2.33352 11.9297H12.25C12.4901 11.9329 12.6842 12.1271 12.6875 12.3672Z" fill="#B3B3B3" />
                  </svg>
                  <Text_14_600_FFFFFF
                    className="hover:text-[#EEEEEE]"
                    style={{
                      color: activeTab === "3" ? '#EEEEEE' : '#B3B3B3',
                    }}
                  >Benchmarks</Text_14_600_FFFFFF>
                </div>,
                key: '4',
                children: <BenchmarkTable />,
              },
              {
                label: <div className="flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 15 16" fill="none">
                    <g clipPath="url(#clip0_1612_2643)">
                      <path d="M1.54759 9.34321C1.54759 9.58139 1.73054 9.77596 1.96297 9.79545L1.9651 9.79771H2.00205C2.25322 9.79771 2.45589 9.59425 2.45589 9.34386V0.842513C2.45589 0.835635 2.45837 0.831008 2.46133 0.828044C2.4643 0.82508 2.46892 0.822602 2.4758 0.822602H7.45216C7.70334 0.822602 7.90601 0.619141 7.90601 0.368756C7.90601 0.117583 7.70255 -0.0850841 7.45217 -0.08509C7.45217 -0.08509 7.45217 -0.08509 7.45216 -0.08509L2.47581 -0.085715H2.4758C1.96409 -0.085715 1.54759 0.330792 1.54759 0.842503V9.34321Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M9.39924 3.89351H11.5441V13.1541C11.5441 13.161 11.5416 13.1656 11.5387 13.1686C11.5357 13.1715 11.5311 13.174 11.5242 13.174H2.47532C2.46845 13.174 2.46382 13.1715 2.46086 13.1686C2.45789 13.1656 2.45541 13.161 2.45541 13.1541L2.45542 10.8135L2.45541 10.8123C2.45355 10.668 2.3974 10.5538 2.30946 10.4765C2.22306 10.4006 2.11086 10.3646 2.00138 10.3647C1.89191 10.3648 1.77978 10.4012 1.69341 10.477C1.60552 10.5542 1.54916 10.6683 1.54711 10.8122H1.5471V10.8135V13.1541C1.5471 13.6658 1.9636 14.0823 2.47532 14.0823H11.5235C12.0353 14.0823 12.4518 13.6658 12.4518 13.1541L12.4524 3.6366C12.4524 3.53125 12.4308 3.43406 12.4008 3.34704C12.3645 3.20093 12.269 3.07725 12.1856 2.98246L12.1857 2.98234L12.1818 2.97845L9.39234 0.191547L9.39237 0.191512L9.39024 0.189522C9.27724 0.0840564 9.12401 -0.0405526 8.92752 -0.0466117L8.92752 -0.0466525H8.92487C8.6737 -0.0466525 8.47103 0.156809 8.47103 0.407193V2.96529C8.47103 3.477 8.88753 3.89351 9.39924 3.89351ZM9.37883 2.96534V1.46209L10.9029 2.98523H9.39872C9.39426 2.98523 9.38924 2.98337 9.38496 2.9791C9.38068 2.97482 9.37883 2.9698 9.37883 2.96534Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M4.8511 5.82794L5.72559 4.95345L5.72572 4.95332C5.86011 4.81951 6.05714 4.78676 6.22189 4.85539L6.22194 4.80545L6.3682 4.95233C6.54518 5.13007 6.54536 5.41738 6.36807 5.59467L5.12681 6.83593L5.12681 6.83593C5.04142 6.92131 4.92596 6.96911 4.80577 6.96916M4.8511 5.82794L4.10369 5.59781C3.94182 5.72156 3.9112 5.95282 4.03494 6.11407L3.96686 6.16615L3.96694 6.16626L4.445 6.79115L4.44501 6.79117C4.53035 6.90265 4.66416 6.96985 4.80577 6.96916M4.8511 5.82794L4.68807 5.61453L4.68805 5.61451C4.53556 5.41505 4.25047 5.37718 4.05157 5.52977L4.8511 5.82794ZM4.80577 6.96916C4.80571 6.96916 4.80564 6.96916 4.80557 6.96916V6.88345L4.80604 6.96916C4.80595 6.96916 4.80586 6.96916 4.80577 6.96916Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M9.67391 5.43773L9.67391 5.43772H9.67247H7.11181V5.43771L7.11037 5.43773C6.96641 5.44015 6.8524 5.49648 6.77518 5.58424C6.69926 5.67051 6.66291 5.78245 6.66282 5.89181C6.66273 6.00116 6.69889 6.11316 6.77481 6.1995C6.85204 6.28733 6.96617 6.34361 7.11038 6.34603L7.11038 6.34604H7.11181H9.67247V6.34605L9.67391 6.34603C9.81788 6.34361 9.93189 6.28728 10.0091 6.19952C10.085 6.11325 10.1214 6.00131 10.1215 5.89195C10.1216 5.7826 10.0854 5.6706 10.0095 5.58426C9.93225 5.49644 9.81812 5.44015 9.67391 5.43773Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M4.8511 8.46857L5.72559 7.59408L5.72572 7.59395C5.86011 7.46013 6.05714 7.42739 6.22189 7.49602L6.22194 7.44607L6.3682 7.59296C6.54518 7.7707 6.54536 8.058 6.36807 8.2353L5.12681 9.47656L5.12681 9.47656C5.04142 9.56194 4.92596 9.60973 4.80577 9.60979M4.8511 8.46857L4.10369 8.23844C3.94182 8.36219 3.9112 8.59345 4.03494 8.7547L3.96686 8.80678L3.96694 8.80688L4.445 9.43178L4.44501 9.4318C4.53035 9.54327 4.66416 9.61048 4.80577 9.60979M4.8511 8.46857L4.68807 8.25515L4.68805 8.25513C4.53556 8.05567 4.25047 8.0178 4.05157 8.17039L4.8511 8.46857ZM4.80577 9.60979C4.80571 9.60979 4.80564 9.60979 4.80557 9.60979V9.52407L4.80604 9.60979C4.80595 9.60979 4.80586 9.60979 4.80577 9.60979Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M9.67391 8.08617L9.67391 8.08616H9.67247H7.11181V8.08615L7.11037 8.08617C6.96641 8.08859 6.8524 8.14492 6.77518 8.23267C6.69926 8.31895 6.66291 8.43089 6.66282 8.54024C6.66273 8.6496 6.69889 8.7616 6.77481 8.84794C6.85204 8.93576 6.96617 8.99205 7.11038 8.99446L7.11038 8.99448H7.11181H9.67247V8.99449L9.67391 8.99446C9.81788 8.99205 9.93189 8.93572 10.0091 8.84796C10.085 8.76168 10.1214 8.64975 10.1215 8.54039C10.1216 8.43103 10.0854 8.31904 10.0095 8.2327C9.93225 8.14487 9.81812 8.08859 9.67391 8.08617Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M5.70122 10.262L4.85095 11.1123L4.68791 10.8988L4.68792 10.8988L4.68703 10.8977C4.59774 10.7848 4.48379 10.7284 4.3672 10.7204C4.25258 10.7125 4.14162 10.7516 4.05473 10.818C3.96783 10.8843 3.90085 10.9811 3.8784 11.0938C3.85556 11.2085 3.88017 11.3333 3.96586 11.4493L3.96585 11.4493L3.96672 11.4505L4.44428 12.0747C4.60342 12.292 4.94059 12.3139 5.12725 12.1203L6.36792 10.8796L6.36793 10.8796L6.36891 10.8786C6.46901 10.7752 6.50978 10.6547 6.50231 10.5381C6.49497 10.4234 6.4415 10.3186 6.36423 10.2412C6.28697 10.1638 6.18221 10.1101 6.06747 10.1027C5.95075 10.0951 5.83023 10.1359 5.72651 10.2361L5.70126 10.2605L5.70122 10.262Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                      <path d="M9.67391 10.7268L9.67391 10.7268H9.67247H7.11181V10.7268L7.11037 10.7268C6.96641 10.7292 6.8524 10.7855 6.77518 10.8733C6.69926 10.9596 6.66291 11.0715 6.66282 11.1809C6.66273 11.2902 6.69889 11.4022 6.77481 11.4886C6.85204 11.5764 6.96617 11.6327 7.11038 11.6351L7.11038 11.6351H7.11181H9.67247V11.6351L9.67391 11.6351C9.81788 11.6327 9.93189 11.5763 10.0091 11.4886C10.085 11.4023 10.1214 11.2904 10.1215 11.181C10.1216 11.0717 10.0854 10.9597 10.0095 10.8733C9.93225 10.7855 9.81812 10.7292 9.67391 10.7268Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.17143" />
                    </g>
                    <defs>
                      <clipPath id="clip0_1612_2643">
                        <rect width="14" height="14" fill="white" />
                      </clipPath>
                    </defs>
                  </svg>
                  <Text_14_600_FFFFFF
                    className="hover:text-[#EEEEEE]"
                    style={{ color: activeTab === "4" ? '#EEEEEE' : '#B3B3B3' }}

                  >Model Evaluations</Text_14_600_FFFFFF>
                </div>,
                key: '5',
                children: <ModelEvalTable />,
              },
            ]}
          />
        </div>
      </div>
    </DashBoardLayout>
  );
};

export default ProjectDetailsPage;
