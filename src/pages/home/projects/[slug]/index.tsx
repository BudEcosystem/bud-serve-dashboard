"use client";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import DashBoardLayout from "../../layout";
import {
  Text_12_400_B3B3B3,
  Text_14_600_B3B3B3,
  Text_14_600_EEEEEE,
} from "@/components/ui/text";
import AnalyticsComponent from "./components/analytics";
import { Project, useProjects } from "src/hooks/useProjects";
import { useDrawer } from "src/hooks/useDrawer";
import DeploymentListTable from "@/components/ui/bud/table/DeploymentListTable";
import { NameIconDisplay } from "@/components/ui/bud/dataEntry/ProjectNameInput";
import { Tabs } from "antd";
import Tags from "src/flows/components/DrawerTags";
import { CustomBreadcrumb } from "@/components/ui/bud/card/DrawerBreadCrumbNavigation";
import BackButton from "@/components/ui/bud/drawer/BackButton";
import { formatDate } from "src/utils/formatDate";
import { SharedWithProjectUsers } from "@/components/ui/bud/drawer/SharedWithUsers";
import { notification } from "antd";
import { useOverlay } from "src/context/overlayContext";
import { openWarning } from "@/components/warningMessage";
import RoutesComponent from "./Routes/Routes";
import { useEndPoints } from "src/hooks/useEndPoint";
import useHandleRouteChange from "@/lib/useHandleRouteChange";
import { PermissionEnum, useUser } from "src/stores/useUser";
import ComingSoon from "@/components/ui/comingSoon";
import ClustersListTable from "@/components/ui/bud/table/ClustersListTable";

const ProjectDetailsPage = () => {
  const { hasProjectPermission, hasPermission } = useUser();
  const { setOverlayVisible } = useOverlay();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState("1");
  const [isHovered, setIsHovered] = useState(false);
  const { projectId } = router.query; // Access the dynamic part of the route
  const { openDrawer } = useDrawer();
  const { getGlobalProject, globalSelectedProject: selectedProjectResult, deleteProject, setProjectValues, projectMembers, selectedProjectId } = useProjects();
  const { endPointsCount } = useEndPoints();
  const [selectedProject, setProject] = useState<Project | null>(null);
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    if (selectedProjectResult) {
      setProject(selectedProjectResult);
    }
  }, [selectedProjectResult]);


  useEffect(() => {
    if (projectId && (projectId !== selectedProjectId || !selectedProject)) {
      getGlobalProject(projectId as string);
    }
  }, [projectId, selectedProjectId]);
  useHandleRouteChange(() => {
    notification.destroy();
  });

  const goBack = () => {
    router.back();
  };


  const HeaderContent = () => {
    return (
      <div className="flex justify-between items-center">
        {isMounted && (
          <div className="flex justify-start items-center">
            <BackButton onClick={goBack} />
            <CustomBreadcrumb
              urls={["/projects", `/projects/${projectId}`, "/projects/[slug]"]}
              data={["Projects", `${selectedProject?.icon} ${selectedProject?.name}`]} />
          </div>
        )}
      </div>
    );
  };
  const triggerDeleteNotification = () => {
    let description =
      endPointsCount > 0 ? "The deployments are running and you will not be allowed to delete the project. In order to delete the project, you will have to pause or delete all deployments in order to delete the project." : "There are no running deployments, you can delete the project.";
    let title = endPointsCount > 0 ? "You\’re not allowed to delete the Project" : "You\’re about to delete the Project"
    const updateNotificationMessage = openWarning({
      title: title, // Replace 'entityName' with the actual value
      description: description,
      deleteDisabled: endPointsCount > 0,
      onDelete: () => {
        deleteProject(selectedProjectId, router).then((result) => {
          // deleteProject('9290dfd0-2225-4f38-bee8-9d5e89c3b7', router).then((result) => {
          console.log(result)
          if (result.success) {
            setOverlayVisible(false);
            notification.destroy(`${title}-delete-notification`);
          } else {
            updateNotificationMessage(result.message);
            setOverlayVisible(false);
            notification.destroy(`${title}-delete-notification`);
          }
        });
      },
      onCancel: () => {
        setOverlayVisible(false);
      },
    });
  };

  useEffect(() => {
    setIsMounted(true)
  }, []);

  return (
    <DashBoardLayout >
      <div className="boardPageView">
        <div className="boardPageTop pt-0 px-0 pb-[0]">
          <div className="px-[1.2rem] pt-[1.05rem] pb-[1.15rem] mb-[2.1rem] border-b-[1px] border-b-[#1F1F1F]">
            <HeaderContent />
          </div>
          <div className="px-[3.5rem]">
            <div className="flex items-center gap-4 justify-between">
              <NameIconDisplay
                icon={selectedProject?.icon}
                name={selectedProject?.name}
              />
              <div className="flex items-center gap-2">
                {selectedProject?.created_at && <Text_12_400_B3B3B3>{formatDate(selectedProject?.created_at)}</Text_12_400_B3B3B3>}
                <SharedWithProjectUsers users={projectMembers} />
                {(hasPermission(PermissionEnum.ProjectManage) || hasProjectPermission(selectedProjectId, PermissionEnum.EndpointManage)) &&
                  <>
                    <button type="button" className="flex items-center "
                      onClick={() => openDrawer('add-members')}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 16 16" fill="none">
                        <path fillRule="evenodd" clipRule="evenodd" d="M5.25446 8.68286C4.99393 9.26353 4.41073 9.66797 3.73307 9.66797C2.8126 9.66797 2.06641 8.92178 2.06641 8.0013C2.06641 7.08083 2.8126 6.33463 3.73307 6.33463C4.41192 6.33463 4.99597 6.74049 5.25583 7.32279L5.24709 7.32825L5.28125 7.38291C5.35769 7.57412 5.39974 7.7828 5.39974 8.0013C5.39974 8.22402 5.35606 8.43653 5.27679 8.63074L5.24709 8.67825L5.25446 8.68286ZM6.10761 9.21608C5.66574 10.0781 4.7683 10.668 3.73307 10.668C2.26031 10.668 1.06641 9.47406 1.06641 8.0013C1.06641 6.52854 2.26031 5.33463 3.73307 5.33463C4.76948 5.33463 5.6678 5.92588 6.10913 6.78948L9.72226 4.53127C9.64383 4.28001 9.60156 4.01278 9.60156 3.73568C9.60156 2.26292 10.7955 1.06901 12.2682 1.06901C13.741 1.06901 14.9349 2.26292 14.9349 3.73568C14.9349 5.20844 13.741 6.40234 12.2682 6.40234C11.3955 6.40234 10.6207 5.98313 10.1343 5.33509L6.38071 7.68106C6.39327 7.78606 6.39974 7.89292 6.39974 8.0013C6.39974 8.11093 6.39312 8.21901 6.38027 8.32517L10.1343 10.6714C10.6207 10.0234 11.3955 9.60417 12.2682 9.60417C13.741 9.60417 14.9349 10.7981 14.9349 12.2708C14.9349 13.7436 13.741 14.9375 12.2682 14.9375C10.7955 14.9375 9.60156 13.7436 9.60156 12.2708C9.60156 11.9937 9.64383 11.7265 9.72226 11.4752L6.10761 9.21608ZM12.2682 5.40234C13.1887 5.40234 13.9349 4.65615 13.9349 3.73568C13.9349 2.8152 13.1887 2.06901 12.2682 2.06901C11.3478 2.06901 10.6016 2.8152 10.6016 3.73568C10.6016 4.65615 11.3478 5.40234 12.2682 5.40234ZM13.9349 12.2708C13.9349 13.1913 13.1887 13.9375 12.2682 13.9375C11.3478 13.9375 10.6016 13.1913 10.6016 12.2708C10.6016 11.3504 11.3478 10.6042 12.2682 10.6042C13.1887 10.6042 13.9349 11.3504 13.9349 12.2708Z" fill="#B3B3B3" />
                      </svg>
                    </button>
                    <button type="button" className="flex items-center" id="editProject" onClick={async () => {
                      setProjectValues({});
                      openDrawer("edit-project");
                    }}>
                      <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 14" fill="none">
                        <path fillRule="evenodd" clipRule="evenodd" d="M11.0871 1.04488C10.9933 0.951116 10.8661 0.898438 10.7335 0.898438C10.6009 0.898438 10.4737 0.951116 10.38 1.04488L3.44805 7.9768C3.35809 8.06675 3.28612 8.17305 3.23601 8.28998L1.87394 11.4681C1.7934 11.6561 1.83539 11.8741 1.97996 12.0187C2.12453 12.1632 2.34255 12.2052 2.53047 12.1247L5.70863 10.7626C5.82556 10.7125 5.93186 10.6405 6.02182 10.5506L12.9537 3.61866C13.149 3.4234 13.149 3.10681 12.9537 2.91155L11.0871 1.04488ZM4.15515 8.6839L10.7335 2.10554L11.8931 3.2651L5.31471 9.84346L3.91273 10.4443L3.5543 10.0859L4.15515 8.6839Z" fill="#B3B3B3" />
                      </svg>
                    </button>
                    <button type="button" className="flex items-center"
                      onClick={async () => {
                        triggerDeleteNotification()
                        setOverlayVisible(true);
                      }}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 14" fill="none">
                        <path fillRule="evenodd" clipRule="evenodd" d="M5.13327 0.898438C4.85713 0.898438 4.63327 1.1223 4.63327 1.39844C4.63327 1.67458 4.85713 1.89844 5.13327 1.89844H8.8666C9.14274 1.89844 9.3666 1.67458 9.3666 1.39844C9.3666 1.1223 9.14274 0.898438 8.8666 0.898438H5.13327ZM2.7666 3.2651C2.7666 2.98896 2.99046 2.7651 3.2666 2.7651H10.7333C11.0094 2.7651 11.2333 2.98896 11.2333 3.2651C11.2333 3.54125 11.0094 3.7651 10.7333 3.7651H10.2661C10.2664 3.77617 10.2666 3.78728 10.2666 3.79844V11.1318C10.2666 11.6841 9.81889 12.1318 9.2666 12.1318H4.73327C4.18098 12.1318 3.73327 11.6841 3.73327 11.1318V3.79844C3.73327 3.78728 3.73345 3.77617 3.73381 3.7651H3.2666C2.99046 3.7651 2.7666 3.54125 2.7666 3.2651ZM9.2666 3.79844L4.73327 3.79844V11.1318L9.2666 11.1318V3.79844Z" fill="#B3B3B3" />
                      </svg>
                    </button>
                  </>}
              </div>
            </div>
            <div className="flex items-center gap-2 mt-[.8rem] mb-[.8rem] flex-wrap">
              {selectedProject?.tags?.length > 0 && (
                selectedProject?.tags?.map((tag, index) => (
                  <Tags
                    textClass="text-[.75rem]"
                    key={index} name={tag.name} color={tag.color}
                  />
                ))
              )}
            </div>
            {/* <div className={`text-[#B3B3B3] max-w-[850px] mt-[1.5rem] pb-[1rem] mb-[1.35rem] text-12`}>
              {selectedProject?.description?.length > 225
                ? isHovered
                  ? selectedProject?.description
                  : selectedProject?.description.slice(0, 225)
                : selectedProject?.description}
              {selectedProject?.description?.length > 225 && (
                <span
                  className="cursor-pointer text-[#EEEEEE] hover:text-[#FFFFFF] "
                  onClick={() => setIsHovered(!isHovered)}
                >
                  &nbsp;
                  {isHovered ? "...See less" : "See more..."}
                </span>
              )}
            </div> */}
          </div>
        </div>
        <div className="projectDetailsDiv">
          <Tabs
            defaultActiveKey="1"
            activeKey={activeTab}
            onChange={(key) => setActiveTab(key)}
            items={[
              {
                label: <div className="flex items-center gap-[0.375rem]">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <path fillRule="evenodd" clipRule="evenodd" d="M7.03317 0.117188C5.32838 0.117188 3.7886 0.403123 2.6372 0.891827C2.06145 1.13615 1.58214 1.42805 1.22715 1.78552C0.872093 2.14299 0.636719 2.58655 0.636719 3.06854V11.168C0.636719 11.3187 0.660315 11.4652 0.70268 11.6064L0.703484 11.6089L0.704288 11.6105C0.938482 12.416 1.74861 12.9976 2.80776 13.4148C2.82154 13.4203 2.8357 13.4255 2.84959 13.4309C2.85629 13.4335 2.86299 13.4363 2.8697 13.439C2.93196 13.4629 2.99529 13.4862 3.05953 13.509C3.08522 13.518 3.11155 13.5266 3.13756 13.5355C3.19623 13.5556 3.25591 13.5751 3.31614 13.5942C3.33078 13.5989 3.34563 13.604 3.36038 13.6087C3.40913 13.6239 3.45788 13.6384 3.50759 13.6529C3.55966 13.6682 3.61216 13.6833 3.66525 13.698C3.69909 13.7073 3.73314 13.7163 3.76741 13.7253C3.80682 13.7357 3.84651 13.7459 3.88646 13.7559C3.93569 13.7682 3.98524 13.7804 4.03527 13.7921C4.06734 13.7996 4.09941 13.8073 4.1318 13.8146C4.18607 13.8267 4.24077 13.8385 4.2959 13.85C4.33563 13.8583 4.37559 13.8662 4.41575 13.8741C4.45597 13.8821 4.49657 13.8899 4.53722 13.8975C4.59101 13.9075 4.64517 13.917 4.69971 13.9264C4.73435 13.9323 4.76932 13.9376 4.80428 13.9433C4.85635 13.9517 4.90842 13.9604 4.96114 13.9683C5.00217 13.9743 5.04362 13.9803 5.08502 13.986C5.14219 13.9939 5.1993 14.0021 5.25716 14.0093C5.28805 14.0132 5.31942 14.0162 5.35047 14.0197C5.41584 14.0275 5.48137 14.0354 5.54754 14.0422C5.57285 14.0448 5.59854 14.047 5.62396 14.0495C5.69014 14.0559 5.75647 14.0624 5.82345 14.068C5.86447 14.0714 5.90603 14.0746 5.94732 14.0777C6.01092 14.0823 6.07453 14.0867 6.13877 14.0906C6.14649 14.091 6.15437 14.091 6.16209 14.0914C6.34448 14.1021 6.52922 14.11 6.71632 14.1139C6.82154 14.1161 6.9267 14.1172 7.03326 14.1172C7.13982 14.1172 7.24577 14.1162 7.351 14.1139C7.41707 14.1126 7.48255 14.1097 7.54807 14.1075C7.57671 14.1066 7.60562 14.1062 7.63415 14.1051C7.73303 14.1012 7.83107 14.0965 7.92855 14.0906H7.93268C7.99558 14.0868 8.05779 14.0823 8.1201 14.0777C8.16139 14.0746 8.20295 14.0714 8.24398 14.068C8.49919 14.0469 8.74877 14.0192 8.99207 13.9852C9.02784 13.9802 9.06355 13.9744 9.09905 13.9691C9.15558 13.9606 9.2114 13.9516 9.26717 13.9425C9.30069 13.9371 9.33447 13.9321 9.36772 13.9264C9.42226 13.9171 9.47642 13.9075 9.53021 13.8975C9.57091 13.8899 9.61145 13.8821 9.65168 13.8741C9.69184 13.8662 9.73179 13.8583 9.77153 13.85C9.82666 13.8385 9.88136 13.8268 9.93563 13.8146C9.96802 13.8073 10.0001 13.7997 10.0322 13.7921C10.0822 13.7804 10.1317 13.7682 10.181 13.7559C10.2209 13.7459 10.2606 13.7357 10.3 13.7253C10.3343 13.7163 10.3683 13.7073 10.4022 13.698C10.4553 13.6833 10.5078 13.6683 10.5598 13.6529C10.6865 13.6157 10.8096 13.5767 10.9299 13.5355C10.9559 13.5266 10.9822 13.5181 11.0079 13.509C11.0935 13.4787 11.1776 13.4472 11.2597 13.4148C12.3902 12.9696 13.2403 12.3372 13.4058 11.4448H13.4042C13.421 11.3543 13.4307 11.2621 13.4307 11.1681V3.0686C13.4307 2.99176 13.4235 2.91647 13.4122 2.84177C13.4104 2.80568 13.404 2.77002 13.3929 2.73564C13.3141 2.38294 13.115 2.05882 12.8435 1.78554C12.4884 1.42806 12.0058 1.13617 11.4302 0.891846C10.2787 0.403142 8.73783 0.117188 7.03317 0.117188ZM7.03317 0.940893C8.64407 0.940893 10.0953 1.21921 11.1075 1.64876C11.6136 1.86354 12.0079 2.11558 12.257 2.36629C12.4291 2.53955 12.5302 2.70344 12.5763 2.86099C12.4525 3.26792 11.9055 3.76631 10.9587 4.13918C9.95552 4.53424 8.56557 4.78672 7.0332 4.78672C5.50084 4.78672 4.11495 4.53424 3.11182 4.13918C2.16498 3.76631 1.61514 3.2679 1.4909 2.86099C1.53702 2.70343 1.63817 2.53955 1.81025 2.36629C2.0593 2.11558 2.45366 1.86354 2.95973 1.64876C3.97189 1.21921 5.42228 0.940893 7.03317 0.940893ZM1.46108 4.16172C1.82328 4.45409 2.28495 4.69916 2.80765 4.90499C3.93825 5.3502 5.41152 5.61045 7.03312 5.61045C8.65472 5.61045 10.1289 5.3502 11.2594 4.90499C11.7813 4.69949 12.2434 4.45507 12.606 4.16334V5.58395C12.6013 5.59661 12.5973 5.60948 12.5939 5.62257C12.5162 6.04134 11.9618 6.58049 10.9586 6.97557C9.95539 7.37063 8.56545 7.62311 7.03308 7.62311C5.50071 7.62311 4.11483 7.37063 3.11169 6.97557C2.1085 6.58051 1.55077 6.04134 1.47307 5.62257C1.46969 5.60948 1.46567 5.59661 1.461 5.58395L1.46108 4.16172ZM2.61942 5.36751C2.51077 5.36794 2.40663 5.41127 2.32978 5.48812C2.25298 5.56497 2.2096 5.66906 2.20917 5.77776C2.20874 5.887 2.25175 5.9919 2.32865 6.06944C2.4056 6.14698 2.51018 6.19079 2.61942 6.19122C2.72919 6.19165 2.83462 6.14821 2.91227 6.07056C2.98987 5.99296 3.03331 5.88753 3.03288 5.77776C3.03245 5.66852 2.98864 5.56396 2.91109 5.48699C2.8336 5.41004 2.72866 5.36708 2.61942 5.36751ZM1.46108 6.99804C1.82328 7.29036 2.28495 7.53623 2.80765 7.7421C3.93825 8.18732 5.41152 8.44676 7.03312 8.44676C8.65472 8.44676 10.1289 8.18732 11.2594 7.7421C11.7813 7.5366 12.2434 7.29137 12.606 6.99964V8.37114C12.5936 8.39951 12.5844 8.42916 12.5786 8.45962C12.5009 8.87845 11.9433 9.41676 10.94 9.81182C9.93682 10.2069 8.55085 10.4594 7.01862 10.4594C5.52648 10.4594 4.17176 10.22 3.17521 9.84239C2.17866 9.46475 1.58917 8.93938 1.47316 8.5264C1.46951 8.51632 1.46549 8.5064 1.4611 8.49664L1.46108 6.99804ZM2.61942 8.16924C2.51077 8.16967 2.40663 8.213 2.32978 8.28984C2.25298 8.36669 2.2096 8.47078 2.20917 8.57948C2.20874 8.68872 2.25175 8.79362 2.32865 8.87116C2.4056 8.9487 2.51018 8.99252 2.61942 8.99295C2.72919 8.99338 2.83462 8.94994 2.91227 8.87228C2.98987 8.79469 3.03331 8.68926 3.03288 8.57948C3.03245 8.47025 2.98864 8.36568 2.91109 8.28872C2.8336 8.21176 2.72866 8.16881 2.61942 8.16924ZM12.606 9.82228V11.168C12.606 11.2104 12.6023 11.253 12.5948 11.2959C12.5243 11.6755 12.0616 12.1507 11.2289 12.5307C11.1887 12.5489 11.1491 12.5669 11.1074 12.5846C11.1006 12.5875 11.0934 12.5897 11.0865 12.5927C11.0297 12.6165 10.9723 12.6406 10.9128 12.6635C10.8869 12.6734 10.8603 12.6827 10.8339 12.6924C10.8054 12.703 10.777 12.7142 10.7479 12.7246C10.7099 12.7382 10.6709 12.7509 10.632 12.764C10.5861 12.7796 10.5408 12.7949 10.4937 12.8099C10.4748 12.8158 10.4556 12.8209 10.4366 12.8268C10.3979 12.8388 10.3594 12.8514 10.3199 12.863C10.2822 12.874 10.2434 12.8845 10.2049 12.8951C10.1632 12.9067 10.1211 12.9186 10.0786 12.9297C10.0404 12.9397 10.0017 12.949 9.96276 12.9587C9.93499 12.9655 9.90721 12.9728 9.87911 12.9796C9.82955 12.9914 9.77925 13.0029 9.72868 13.0142C9.69147 13.0224 9.65377 13.0303 9.61607 13.0383C9.57494 13.047 9.53391 13.0557 9.49219 13.064C9.4517 13.0721 9.41095 13.0797 9.36992 13.0874C9.3289 13.095 9.28761 13.1026 9.24605 13.1099C9.20985 13.1163 9.17322 13.1223 9.13665 13.1284C8.99244 13.1522 8.84582 13.1737 8.69584 13.1928C8.67557 13.1954 8.65508 13.1976 8.63471 13.2C8.57373 13.2075 8.51233 13.2152 8.4505 13.2218C8.42015 13.225 8.38936 13.2275 8.3588 13.2306C8.20114 13.2463 8.04116 13.2599 7.87858 13.27C7.87139 13.2705 7.86404 13.2704 7.85686 13.2708C7.68005 13.2816 7.50132 13.2895 7.31951 13.2934C7.22486 13.2954 7.12898 13.2966 7.03315 13.2966C6.93759 13.2966 6.84278 13.2953 6.7484 13.2934C6.55926 13.2894 6.37221 13.2815 6.18854 13.27H6.18521C5.91166 13.2529 5.64525 13.227 5.38644 13.1944H5.38311C4.51501 13.0847 3.73831 12.8926 3.11161 12.6457C2.10836 12.2506 1.55069 11.7148 1.47299 11.2959C1.46526 11.253 1.46092 11.2104 1.46092 11.168V9.84639C1.84107 10.1499 2.32854 10.4012 2.88305 10.6114C4.00121 11.0351 5.43942 11.2839 7.01846 11.2839C8.64006 11.2839 10.1134 11.0236 11.2439 10.5784C11.7739 10.3697 12.2416 10.1201 12.606 9.82228ZM2.61942 11.1166C2.51077 11.117 2.40663 11.1603 2.32978 11.2372C2.25298 11.314 2.2096 11.4181 2.20917 11.5268C2.20874 11.636 2.25175 11.7409 2.32865 11.8185C2.4056 11.896 2.51018 11.9398 2.61942 11.9403C2.72919 11.9407 2.83462 11.8973 2.91227 11.8196C2.98987 11.742 3.03331 11.6366 3.03288 11.5268C3.03245 11.4176 2.98864 11.313 2.91109 11.236C2.8336 11.1591 2.72866 11.1161 2.61942 11.1166Z" fill="#EEEEEE" />
                  </svg>
                  {activeTab === "1" ?
                    <Text_14_600_EEEEEE >
                      Deployments</Text_14_600_EEEEEE>
                    :
                    <Text_14_600_B3B3B3 >Deployments</Text_14_600_B3B3B3>
                  }
                </div>,
                key: '1',
                children: <DeploymentListTable />
              },
              {
                label: <div className="flex items-center gap-[0.375rem]">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <g clipPath="url(#clip0_1517_3714)">
                      <path d="M1.69739 7.89056L1.69739 7.89056C1.89722 8.09037 2.22137 8.09039 2.4212 7.89059C2.42121 7.89058 2.42123 7.89057 2.42124 7.89056L2.78318 7.52898V13.7053C2.78318 13.8697 2.84578 14.0004 2.94532 14.0889C3.04304 14.1758 3.1705 14.2171 3.29471 14.2171C3.41891 14.2171 3.54638 14.1758 3.64409 14.0889C3.74364 14.0004 3.80623 13.8697 3.80623 13.7053V11.3346H8.64669C10.0668 11.3346 11.218 10.184 11.218 8.76432V7.52898L11.5799 7.89056C11.5799 7.89057 11.5799 7.89058 11.58 7.89059C11.7798 8.09038 12.1039 8.09038 12.3038 7.89056C12.5036 7.69073 12.5036 7.3671 12.3038 7.16727L11.0684 5.93188L10.9977 6.00259L11.0684 5.93188C10.8685 5.73206 10.5444 5.73205 10.3445 5.93188L9.10914 7.16727C8.90932 7.3671 8.90932 7.69073 9.10914 7.89056L9.17985 7.81985L9.10915 7.89056C9.30897 8.09037 9.63312 8.09039 9.83296 7.89059C9.83297 7.89058 9.83298 7.89057 9.83299 7.89056L10.1949 7.52898V8.76432C10.1949 9.61856 9.50207 10.3116 8.64672 10.3116H3.80626L3.80622 7.52899L4.16817 7.89056C4.16818 7.89057 4.16819 7.89058 4.1682 7.89059C4.36804 8.09038 4.6922 8.09038 4.89201 7.89056C5.09184 7.69073 5.09184 7.3671 4.89201 7.16727L3.65663 5.93188L3.65662 5.93188C3.45678 5.73206 3.13261 5.73205 2.93278 5.93188L1.69739 7.16727C1.49756 7.3671 1.49756 7.69073 1.69739 7.89056ZM2.05906 0.0171875C1.32242 0.0171875 0.724219 0.614847 0.724219 1.35258V3.8233C0.724219 4.56048 1.32188 5.15814 2.05906 5.15814H4.53034C5.26695 5.15814 5.86518 4.56051 5.86518 3.8233V1.35258C5.86518 0.615451 5.26758 0.0171875 4.53034 0.0171875H2.05906ZM1.74781 3.8233V1.35258C1.74781 1.18022 1.88742 1.04078 2.05906 1.04078H4.53034C4.70198 1.04078 4.84159 1.18022 4.84159 1.35258V3.8233C4.84159 3.99502 4.70207 4.13455 4.53034 4.13455H2.05906C1.88734 4.13455 1.74781 3.99502 1.74781 3.8233ZM9.47091 0.0171875C8.73428 0.0171875 8.13607 0.614847 8.13607 1.35258V3.8233C8.13607 4.56048 8.73373 5.15814 9.47091 5.15814H11.9422C12.6788 5.15814 13.277 4.56051 13.277 3.8233V1.35258C13.277 0.615451 12.6794 0.0171875 11.9422 0.0171875H9.47091ZM9.15966 3.8233V1.35258C9.15966 1.18022 9.29928 1.04078 9.47091 1.04078H11.9422C12.1138 1.04078 12.2534 1.18022 12.2534 1.35258V3.8233C12.2534 3.99502 12.1139 4.13455 11.9422 4.13455H9.47091C9.29919 4.13455 9.15966 3.99502 9.15966 3.8233Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    </g>
                    <defs>
                      <clipPath id="clip0_1517_3714">
                        <rect width="14" height="14" fill="white" transform="translate(0 0.117188)" />
                      </clipPath>
                    </defs>
                  </svg>
                  {activeTab === "2" ?
                    <Text_14_600_EEEEEE >
                      Routes</Text_14_600_EEEEEE>
                    :
                    <Text_14_600_B3B3B3
                      className="hover:text-white!"
                    >Routes</Text_14_600_B3B3B3>
                  }
                </div>,
                key: '2',
                children: <RoutesComponent data={0} />,
              },
              {
                label: <div className="flex items-center gap-[0.375rem]">
                  <svg xmlns="http://www.w3.org/2000/svg" width=".875rem" height=".875rem" viewBox="0 0 14 15" fill="none">
                    <path d="M12.6875 12.3672C12.6842 12.6073 12.4901 12.8014 12.25 12.8047H2.33352C1.77079 12.8014 1.31579 12.3464 1.3125 11.7837V1.86719C1.3125 1.62546 1.50828 1.42969 1.75 1.42969C1.99172 1.42969 2.1875 1.62546 2.1875 1.86719V7.40867L3.08602 6.73765V6.73819C3.07672 6.67038 3.07672 6.60148 3.08602 6.53367C3.08602 5.96985 3.54266 5.5132 4.10649 5.5132C4.67032 5.5132 5.12751 5.96983 5.12751 6.53367C5.12751 6.61843 5.11603 6.7032 5.09251 6.78469L7.18103 8.53469C7.31447 8.47344 7.45994 8.44172 7.60651 8.44117C7.69565 8.44281 7.78424 8.45649 7.86901 8.48219L10.15 5.78117C10.0942 5.65047 10.0647 5.50937 10.0625 5.36719C10.0625 4.9543 10.3114 4.58187 10.6925 4.42383C11.0743 4.26633 11.5134 4.35328 11.8054 4.64531C12.0969 4.93733 12.1844 5.37648 12.0264 5.75765C11.8683 6.13937 11.4964 6.3882 11.0835 6.3882C10.9944 6.38655 10.9058 6.37288 10.821 6.34718L8.48751 9.03616C8.5433 9.16741 8.57283 9.30796 8.57501 9.45069C8.57501 10.0145 8.11783 10.4712 7.55399 10.4712C6.99017 10.4712 6.53352 10.0145 6.53352 9.45069C6.53297 9.36592 6.545 9.28116 6.56852 9.19967L4.48 7.44967C4.34656 7.51092 4.20109 7.54263 4.05398 7.54318C3.88882 7.54099 3.72695 7.49943 3.58148 7.42068L2.1875 8.50568V11.7836C2.1875 11.8225 2.20281 11.8597 2.23016 11.887C2.2575 11.9143 2.29469 11.9297 2.33352 11.9297H12.25C12.4901 11.9329 12.6842 12.1271 12.6875 12.3672Z" fill="#B3B3B3" />
                  </svg>
                  {activeTab === "3" ?
                    <Text_14_600_EEEEEE >
                      Analytics</Text_14_600_EEEEEE>
                    :
                    <Text_14_600_B3B3B3 >Analytics</Text_14_600_B3B3B3>
                  }
                </div>,
                key: '3',
                children: <AnalyticsComponent data={selectedProject} />
              },
              {
                label: <div className="flex items-center gap-[0.375rem]">
                  <svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16" fill="none">
                    <path d="M9.73948 3.16941L9.73942 3.16938L9.738 3.17294C9.65338 3.38531 9.73436 3.63325 9.94285 3.72571L9.98339 3.63429L9.94189 3.72527C11.8405 4.59133 13.0573 6.50744 13.0573 8.59044C13.0573 8.761 13.0572 8.92568 13.0406 9.08954C13.0179 9.31314 13.1926 9.53291 13.4184 9.55585L13.4183 9.55636H13.4285H13.4623C13.6817 9.55636 13.8623 9.40044 13.8841 9.17765L13.8841 9.17711C13.9013 8.99031 13.9183 8.79979 13.9184 8.5911L13.9183 8.59043C13.9022 6.19269 12.4879 3.9849 10.2975 2.96675L10.2597 2.9492L10.2542 2.95125C10.051 2.88999 9.82646 2.97328 9.73948 3.16941Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    <path d="M2.38044 8.58519C2.38044 6.50355 3.5958 4.60476 5.49417 3.72082C5.71675 3.63023 5.80581 3.36454 5.69733 3.16176C5.60522 2.94077 5.33967 2.8532 5.1376 2.96279C2.94927 3.96399 1.53685 6.18615 1.53532 8.58199C1.51945 8.78732 1.51912 8.98135 1.55415 9.17686C1.57848 9.39684 1.7571 9.55112 1.97544 9.55112H2.00925V9.55163L2.01936 9.5506C2.24258 9.52793 2.41962 9.32793 2.39726 9.08523L2.39726 9.08523L2.39717 9.0843C2.38052 8.92043 2.38044 8.75576 2.38044 8.58519Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    <path d="M4.59667 12.9666L4.59665 12.9667C5.51303 13.6162 6.57948 13.9494 7.69619 13.9494C8.81348 13.9494 9.89546 13.6163 10.7936 12.9682C10.9899 12.816 11.2574 12.8587 11.3927 13.0572C11.5443 13.2541 11.5005 13.5219 11.3007 13.6565C11.3004 13.6567 11.3001 13.6569 11.2997 13.6571L11.2441 13.574C10.2084 14.304 8.98647 14.6946 7.71345 14.6946C6.44043 14.6946 5.21846 14.304 4.1828 13.574L4.59667 12.9666ZM4.59667 12.9666L4.59446 12.9652C4.39637 12.8325 4.15413 12.8805 4.0055 13.0499L3.99538 13.0615L3.98919 13.0755C3.90659 13.2625 3.94251 13.5195 4.12296 13.6542L4.14957 13.674H4.15124L4.59667 12.9666Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    <path d="M5.89609 2.8318C5.89609 3.83782 6.70468 4.64642 7.71071 4.64642C8.71674 4.64642 9.52532 3.83783 9.52532 2.8318C9.52532 1.82578 8.71674 1.01719 7.71071 1.01719C6.70468 1.01719 5.89609 1.82577 5.89609 2.8318ZM8.68004 2.8318C8.68004 3.37065 8.24943 3.80127 7.71058 3.80127C7.17173 3.80127 6.74112 3.37065 6.74112 2.8318C6.74112 2.29296 7.17173 1.86234 7.71058 1.86234C8.24943 1.86234 8.68004 2.29296 8.68004 2.8318Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    <path d="M0.961249 11.0225L0.961248 11.0225C0.835426 11.4906 0.907445 11.9757 1.14051 12.3879C1.37468 12.8021 1.77017 13.1074 2.23726 13.2329L2.23723 13.233L2.24157 13.234C2.4 13.2691 2.54325 13.2874 2.7048 13.2874C3.01146 13.2874 3.33462 13.1975 3.60436 13.0361C4.46551 12.5334 4.77147 11.4206 4.26775 10.5571C3.76513 9.69562 2.65209 9.38944 1.78848 9.89326L1.78837 9.89306L1.7827 9.89691C1.39128 10.1627 1.08687 10.5551 0.961249 11.0225ZM2.46054 12.4298L2.46057 12.4297L2.45646 12.4287C2.21279 12.368 1.9979 12.1996 1.87478 11.9855C1.75169 11.7523 1.72125 11.4897 1.78279 11.2423L1.78465 11.2349C1.84694 10.9938 2.01468 10.7817 2.22717 10.66C2.68835 10.3989 3.27306 10.5517 3.5513 11.014C3.81171 11.4751 3.65866 12.0593 3.19658 12.3373C2.98034 12.4609 2.71962 12.506 2.46054 12.4298Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                    <path d="M11.1196 10.6046C10.6401 11.4389 10.9309 12.5132 11.7595 13.0255L11.7598 13.0274L11.8019 13.051C12.0861 13.2104 12.3912 13.3011 12.6995 13.3011C12.859 13.3011 13.0204 13.2831 13.1652 13.2471L13.1652 13.2471L13.167 13.2466C13.6341 13.1211 14.0296 12.8159 14.2637 12.4016C14.4968 11.9894 14.5688 11.5044 14.443 11.0362C14.3175 10.5693 14.0125 10.174 13.5986 9.9398C12.7351 9.43646 11.6224 9.74268 11.1199 10.604L11.1199 10.604L11.1196 10.6046ZM12.2058 12.3334C11.7616 12.0555 11.6098 11.4547 11.8692 11.0117C12.0543 10.7033 12.378 10.5343 12.6995 10.5343C12.8666 10.5343 13.0206 10.5795 13.18 10.659C13.4066 10.7805 13.5595 10.9928 13.6208 11.2395C13.6825 11.4874 13.6518 11.7504 13.5275 11.9831C13.4062 12.2104 13.1936 12.3636 12.9465 12.4251C12.6996 12.4865 12.4377 12.4563 12.2058 12.3334Z" fill="#B3B3B3" stroke="#B3B3B3" strokeWidth="0.2" />
                  </svg>
                  {activeTab === "4" ?
                    <Text_14_600_EEEEEE >
                      Clusters</Text_14_600_EEEEEE>
                    :
                    <Text_14_600_B3B3B3 >Clusters</Text_14_600_B3B3B3>
                  }
                </div>,
                key: '4',
                children: <ClustersListTable />
              },
            ]}
          />
        </div>
      </div>
    </DashBoardLayout>
  );
};

export default ProjectDetailsPage;
